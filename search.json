[{"title":"非Root用户无法显示jps结果","url":"/2018/12/10/非Root用户无法显示jps结果/","content":"#### 一、问题描述\n非root用户执行jps命令时不显示结果，如图：\n{% asset_img 1.jpg 非Root用户无法显示jps结果 %}\n#### 二、原因分析\njps需要在tmp下创建一个hsperfdata_username的目录，用来存放进程的ip，所以检查一下/tmp/hsperfdata_username是否存在，如果不存在则自己创建一个，然后再检查权限。\n{% asset_img 2.jpg 非Root用户无法显示jps结果 %}\n\n可以看出无法显示的原因是权限。\n#### 三、解决方案\n修改文件权限：\n```\nchown -R hadoop.hadoop /tmp/hsperfdata_hadoop\n```\n{% asset_img 3.jpg 非Root用户无法显示jps结果 %}\n#### 四、效果\n{% asset_img 4.jpg 非Root用户无法显示jps结果 %}","tags":["Linux"]},{"title":"启动集群后Slave无法启动DataNode进程","url":"/2018/10/09/启动集群后Slave无法启动DataNode进程/","content":"\n#### 一、问题描述\n执行start-all.sh后，slave进程中没有DataNode\n#### 二、问题查看\n去Slave的/hadoop/logs文件查看日志，信息如下：\n{% asset_img 报错信息.jpg 启动集群后Slave无法启动DataNode进程 %}\n\n表明：造成无法启动DataNode进程的原因是namenode的clusterID和datanode的clusterID不匹配，一般造成这种问题的原因是多次执行了namenode格式化命令：\n```\nhdfs namenode -format\n```\nok,直接分别去查看响应的文件是否真的如此：\n\n###### 1.查看slave：\n{% asset_img slave截图.jpg 启动集群后Slave无法启动DataNode进程 %}{% asset_img slave-version.jpg 启动集群后Slave无法启动DataNode进程 %}\n###### 2.查看master:\n{% asset_img master截图.jpg 启动集群后Slave无法启动DataNode进程 %}{% asset_img master-version.jpg 启动集群后Slave无法启动DataNode进程 %}\n__ps:对比红色线框内容即可，图中为已修改完成的结果，二者一致即可！__\n\n#### 三、结果\n\n重新执行start-all.sh命令，然后在slave执行jps，结果如下：\n{% asset_img 结果.jpg 启动集群后Slave无法启动DataNode进程 %}\n\n恢复正常:)\n","tags":["hadoop"]},{"title":"重装系统后恢复hexo","url":"/2018/08/16/重装系统后恢复hexo/","content":"### 适用情况：\n- 重装了系统/换台电脑\n- 保存了原来部署的hexo文件  \n  \n原来的部署文件如下图：\n{% asset_img hexo1.jpg 重装系统后恢复hexo %}\n\n### 准备工作\n1. 安装git\n    + [Git下载](https://git-scm.com/)\n2. 配置SSH key\n   + 在\"C:\\Users\\username\"下运行git bash\n   + 运行如下命令：\n    ```\n    ssh-keygen -t rsa -C xxxx(你的email) # 一直enter\n    ```\n   + 结束后会看到目录生成了.ssh文件\n   + 在github添加新的SSH key\n   + Settings -> SSH and GPG keys -> new SSH key\n   + 在Key文本框里粘贴公钥id_rsa.pub文件的内容(注意后缀！这是公钥)\n   + 最后点击Add SSH Key\n  \n3. 安装Nodejs\n   + [Nodejs下载](https://nodejs.org/en/)\n4. 安装hexo\n   + 打开git bash,运行如下命令:\n   ```\n    npm install hexo-cli -g\n   ```\n\n### 具体步骤\n1. 复制以下文件到新的目录\n\n{% asset_img hexo2.jpg 重装系统后恢复hexo %} \n\n(ps：其中蓝色框文件为.gitignore文件,如果没看到可以查看隐藏文件)\n\n\n2. 在新拷贝的文件夹中打开git bash,运行以下命令：\n    ```\n    npm install # 安装模块\n    ```\n(ps:不要用hexo init 命令，这个命令会重置站点的配置文件_config.yml的内容:p)\n\n3. 安装其他插件：\n   + 部署到git的插件：\n    ```\n    npm install hexo-deployer-git --save\n    ```\n   + others...\n4. 生成和部署：\n   ```\n    hexo g\n    hexo d\n   ```\n5. 预览:\n   ```\n    hexo s\n   ```\n   在[http://localhost:4000/](http://localhost:4000/)查看效果\n\n   hexo 部署文件最后如图所示：\n   {% asset_img hexo3.jpg 重装系统后恢复hexo %}  \n\n  <center>---end---</center>\n\n\n\n","tags":["system"]},{"title":"hello world","url":"/2018/04/05/hello-world/","content":"\n之前的blog因为忘了备份全部丢失 = =\n\n其实也没什么可供输出的，丢失了就丢失了，现在打算重新维护\n\n另外简书也懒得搬运了，毕竟，没什么可供输出哇 :)\n\n总之，欢迎来到glassy的blog\n\nlink start !"}]